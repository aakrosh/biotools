#!/usr/bin/env python

"""
    usage:
        get_results_from_enrichr [options] userListId outdir

    where the options are:
        -h,--help : print usage and quit
        -d,--debug: print debug information
        -l,--libraries: restrict output to just the ones in this file
    
    and the arguments are:

    userListId : the output from submit_to_enrichr
    outdir : the output directory to put results in
"""

from sys import argv, stderr, stdin, exit, stdout
from getopt import getopt, GetoptError
from os import mkdir

import json
import requests

__author__ = "Aakrosh Ratan"
__email__  = "ratan@virginia.edu"

# do we want the debug information to be printed?
debug_flag = False

ENRICHR_URL = 'http://amp.pharm.mssm.edu/Enrichr/export'

LIBRARIES = """Genes_Associated_with_NIH_Grants
Cancer_Cell_Line_Encyclopedia
Achilles_fitness_decrease
Achilles_fitness_increase
Aging_Perturbations_from_GEO_down
Aging_Perturbations_from_GEO_up
Allen_Brain_Atlas_down
Allen_Brain_Atlas_up
ARCHS4_Cell-lines
ARCHS4_IDG_Coexp
ARCHS4_Kinases_Coexp
ARCHS4_TFs_Coexp
ARCHS4_Tissues
BioCarta_2013
BioCarta_2015
BioCarta_2016
BioPlex_2017
ChEA_2013
ChEA_2015
ChEA_2016
Chromosome_Location
CORUM
dbGaP
Disease_Perturbations_from_GEO_down
Disease_Perturbations_from_GEO_up
Disease_Signatures_from_GEO_down_2014
Disease_Signatures_from_GEO_up_2014
Drug_Perturbations_from_GEO_2014
Drug_Perturbations_from_GEO_down
Drug_Perturbations_from_GEO_up
DrugMatrix
ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X
ENCODE_Histone_Modifications_2013
ENCODE_Histone_Modifications_2015
ENCODE_TF_ChIP-seq_2014
ENCODE_TF_ChIP-seq_2015
Epigenomics_Roadmap_HM_ChIP-seq
ESCAPE
GeneSigDB
Genome_Browser_PWMs
GO_Biological_Process_2013
GO_Biological_Process_2015
GO_Biological_Process_2017
GO_Biological_Process_2017b
GO_Cellular_Component_2013
GO_Cellular_Component_2015
GO_Cellular_Component_2017
GO_Cellular_Component_2017b
GO_Molecular_Function_2013
GO_Molecular_Function_2015
GO_Molecular_Function_2017
GO_Molecular_Function_2017b
GTEx_Tissue_Sample_Gene_Expression_Profiles_down
GTEx_Tissue_Sample_Gene_Expression_Profiles_up
HMDB_Metabolites
HomoloGene
Human_Gene_Atlas
Human_Phenotype_Ontology
HumanCyc_2015
Humancyc_2016
huMAP
Jensen_COMPARTMENTS
Jensen_DISEASES
Jensen_TISSUES
KEA_2015
KEGG_2013
KEGG_2015
KEGG_2016
Kinase_Perturbations_from_GEO_down
Kinase_Perturbations_from_GEO_up
Ligand_Perturbations_from_GEO_down
Ligand_Perturbations_from_GEO_up
LINCS_L1000_Chem_Pert_down
LINCS_L1000_Chem_Pert_up
LINCS_L1000_Kinase_Perturbations_down
LINCS_L1000_Kinase_Perturbations_up
LINCS_L1000_Ligand_Perturbations_down
LINCS_L1000_Ligand_Perturbations_up
MCF7_Perturbations_from_GEO_down
MCF7_Perturbations_from_GEO_up
MGI_Mammalian_Phenotype_2013
MGI_Mammalian_Phenotype_2017
MGI_Mammalian_Phenotype_Level_3
MGI_Mammalian_Phenotype_Level_4
Microbe_Perturbations_from_GEO_down
Microbe_Perturbations_from_GEO_up
Mouse_Gene_Atlas
MSigDB_Computational
MSigDB_Oncogenic_Signatures
NCI-60_Cancer_Cell_Lines
NCI-Nature_2016
NURSA_Human_Endogenous_Complexome
Old_CMAP_down
Old_CMAP_up
OMIM_Disease
OMIM_Expanded
Panther_2016
Pfam_InterPro_Domains
Phosphatase_Substrates_from_DEPOD
PPI_Hub_Proteins
Reactome_2016
RNA-Seq_Disease_Gene_and_Drug_Signatures_from_GEO
SILAC_Phosphoproteomics
Single_Gene_Perturbations_from_GEO_down
Single_Gene_Perturbations_from_GEO_up
SysMyo_Muscle_Gene_Sets
TargetScan_microRNA
TF-LOF_Expression_from_GEO
Tissue_Protein_Expression_from_Human_Proteome_Map
Tissue_Protein_Expression_from_ProteomicsDB
Transcription_Factor_PPIs
TRANSFAC_and_JASPAR_PWMs
Virus_Perturbations_from_GEO_down
Virus_Perturbations_from_GEO_up
VirusMINT
WikiPathways_2016"""

def main(user_list_id, outdir, libs):
    global ENRICHR_URL

    # create the output directory if it doesnt exist
    try:
        mkdir(outdir)
    except OSError:
        pass

    # now get the results from enrichr
    for lib in libs:
        query_string = '?userListId=%s&filename=%s&backgroundType=%s'
        filename = "%s/%s" % (outdir, lib)

        url = ENRICHR_URL + query_string % (user_list_id, filename, lib)
        response = requests.get(url, stream=True)

        with open(filename + '.txt', 'wb') as f:
            for chunk in response.iter_content(chunk_size=1024): 
                if chunk:
                    f.write(chunk)

if __name__ == "__main__":
    try:
        opts, args = getopt(argv[1:], "hdl:",["help", "debug", "libraries="])
    except GetoptError, err:
        print str(err)
        print >> stderr, __doc__
        exit(2) 

    libs = LIBRARIES.split('\n')

    for o, a in opts:
        if o in ("-h", "--help"):
            print >> stderr, __doc__
            exit()
        elif o in ("-d", "--debug"):
            debug_flag = True
        elif o in ("-l", "--libraries"):
            libs = []
            with open(a,'r') as f:
                for line in f:
                    libs.append(line.strip())
        else:
            assert False, "unhandled option"

    if len(args) != 2:
        print >> stderr, __doc__
        exit(3)

    main(args[0], args[1], libs)
