#!/usr/bin/env python

"""
    usage:
        submit_to_enrichr [options] column input

    where the options are:
        -h,--help : print usage and quit
        -d,--debug: print debug information
        -s,--separator: use the following delimiter instead of tab 

    and the arguments are:

    column : the column in the input file which has the gene names
    input: tab delimited input file to use 

    Notes:
    1. The column should be an integer with the first column specified as 1.
"""

from sys import argv, stderr, stdin, exit, stdout
from getopt import getopt, GetoptError

import json
import requests

__author__ = "Aakrosh Ratan"
__email__  = "ratan@virginia.edu"

# do we want the debug information to be printed?
debug_flag = False

ENRICHR_URL = 'http://amp.pharm.mssm.edu/Enrichr/addList'

def main(colindx, filename, delim):
    global ENRICHR_URL

    genes = set()
    with open(filename, 'r') as f:
        for line in f:
            genes.add(line.strip().split(delim)[colindx-1])

    genes_str = '\n'.join([x for x in genes])
    description = 'Example gene list'

    payload = {
        'list': (None, genes_str),
        'description': (None, description)
    }

    response = requests.post(ENRICHR_URL, files=payload)
    if not response.ok:
        raise Exception('Error analyzing gene list')

    data = json.loads(response.text)
    print json.dumps(data, indent=2, sort_keys=True)
    

if __name__ == "__main__":
    try:
        opts, args = getopt(argv[1:], "hds:",["help", "debug", "separator="])
    except GetoptError, err:
        print str(err)
        print >> stderr, __doc__
        exit(2) 

    delim = '\t'

    for o, a in opts:
        if o in ("-h", "--help"):
            print >> stderr, __doc__
            exit()
        elif o in ("-d", "--debug"):
            debug_flag = True
        elif o in ("-s", "--separator"):
            delim = a
        else:
            assert False, "unhandled option"

    if len(args) != 2:
        print >> stderr, __doc__
        exit(3)

    main(int(args[0]), args[1], delim)
