#!/usr/bin/env python

"""
    usage:
        summarise_output [options] fdrcutoff outdir

    where the options are:
        -h,--help : print usage and quit
        -d,--debug: print debug information
    
    and the arguments are:

    fdrcutoff: the cutoff for the 'Adjusted P-value' in the tables
    outdir : the output directory to put results in
"""

from sys import argv, stderr, stdin, exit, stdout
from getopt import getopt, GetoptError
from os import listdir

import json
import requests

__author__ = "Aakrosh Ratan"
__email__  = "ratan@virginia.edu"

# do we want the debug information to be printed?
debug_flag = False

def main(cutoff, outdir):
    for filename in listdir(outdir):
        output = []
        with open("%s/%s" % (outdir,filename), 'r') as f:
            line = f.readline()
            tokens = line.strip().split("\t")
            assert tokens[0] == "Term"
            assert tokens[1] == "Overlap"
            assert tokens[3] == "Adjusted P-value"
            assert tokens[-1] == "Genes"
            for line in f:
                tokens = line.strip().split("\t")
                if float(tokens[3]) < cutoff:
                    val = str(round(float(tokens[3]), 3))
                    output.append("\t"+"\t".join([tokens[0],tokens[1],val,tokens[-1]]))
        if output:
            print "%s:" % filename[:-4]
            print "\n".join(output)
            print ""   

if __name__ == "__main__":
    try:
        opts, args = getopt(argv[1:], "hd",["help", "debug"])
    except GetoptError, err:
        print str(err)
        print >> stderr, __doc__
        exit(2) 

    for o, a in opts:
        if o in ("-h", "--help"):
            print >> stderr, __doc__
            exit()
        elif o in ("-d", "--debug"):
            debug_flag = True
        else:
            assert False, "unhandled option"

    if len(args) != 2:
        print >> stderr, __doc__
        exit(3)

    main(float(args[0]), args[1])
